-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-01-07 13:18:15 EET
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE bd066.angajati (
    id_angajat      NUMBER(2) NOT NULL,
    nume_angajat    VARCHAR2(20 BYTE) NOT NULL,
    prenume_angajat VARCHAR2(20 BYTE) NOT NULL,
    pozitie         VARCHAR2(20 BYTE) NOT NULL,
    data_angajarii  DATE NOT NULL,
    salariu         NUMBER(5) NOT NULL
);

ALTER TABLE bd066.angajati
    ADD CONSTRAINT anagajati_nume_angajat_ck CHECK ( length(nume_angajat) > 2
                                                     AND REGEXP_LIKE ( nume_angajat,
                                                                       '^[A-Za-z]*$' ) );

ALTER TABLE bd066.angajati
    ADD CONSTRAINT angajati_prenume_angajat_ck CHECK ( length(prenume_angajat) > 2
                                                       AND REGEXP_LIKE ( prenume_angajat,
                                                                         '^[A-Za-z]*$' ) );

ALTER TABLE bd066.angajati
    ADD CONSTRAINT angajati_pozitie_ck CHECK ( pozitie IN ( 'administrator', 'angajat_casa', 'angajat_marfa', 'livrator' ) );

ALTER TABLE bd066.angajati
    ADD CONSTRAINT angajati_data_angajarii_ck CHECK ( data_angajarii > TO_DATE('01-01-2000', 'dd-mm-yyyy') );

ALTER TABLE bd066.angajati
    ADD CONSTRAINT angajati_salariu_ck CHECK ( salariu BETWEEN 1400 AND 99999 );

CREATE UNIQUE INDEX bd066.angajati_pk ON
    bd066.angajati (
        id_angajat
    ASC );

ALTER TABLE bd066.angajati ADD CONSTRAINT angajati_pk PRIMARY KEY ( id_angajat );

CREATE TABLE bd066.client (
    id_client   NUMBER(2) NOT NULL,
    nume_client VARCHAR2(20 BYTE) NOT NULL
);

ALTER TABLE bd066.client
    ADD CONSTRAINT client_nume_client_ck CHECK ( length(nume_client) > 2
                                                 AND REGEXP_LIKE ( nume_client,
                                                                   '^[A-Za-z]*$' ) );

CREATE UNIQUE INDEX bd066.client_pk ON
    bd066.client (
        id_client
    ASC );

ALTER TABLE bd066.client ADD CONSTRAINT client_pk PRIMARY KEY ( id_client );

CREATE TABLE bd066.comanda (
    id_comanda          NUMBER(2) NOT NULL,
    data_comanda        DATE,
    angajati_id_angajat NUMBER(2) NOT NULL,
    client_id_client    NUMBER(2) NOT NULL,
    pret_comanda        NUMBER(3) DEFAULT ON NULL 0 NOT NULL,
    CHECK ( data_comanda >= TO_DATE('01-01-2021', 'dd-mm-yyyy') )
);

ALTER TABLE bd066.comanda
    ADD CHECK ( data_comanda >= TO_DATE('01-01-2021', 'dd-mm-yyyy') );

ALTER TABLE bd066.comanda ADD CONSTRAINT comanda_pret_ck CHECK ( pret_comanda >= 0 );

CREATE UNIQUE INDEX bd066.comanda_pk ON
    bd066.comanda (
        id_comanda
    ASC );

ALTER TABLE bd066.comanda ADD CONSTRAINT comanda_pk PRIMARY KEY ( id_comanda );

CREATE TABLE bd066.detalii_client (
    id_informatii    NUMBER(2) NOT NULL,
    client_id_client NUMBER(2) NOT NULL,
    adresa           VARCHAR2(40 BYTE),
    data_nasterii    DATE NOT NULL,
    gen              CHAR(1 BYTE),
    email            VARCHAR2(30 BYTE)
);

ALTER TABLE bd066.detalii_client
    ADD CONSTRAINT detalii_client_adresa_ck CHECK ( length(adresa) > 2
                                                    AND REGEXP_LIKE ( adresa,
                                                                      '^[A-Za-z]*+ +[A-Za-z]*' ) );

ALTER TABLE bd066.detalii_client
    ADD CONSTRAINT clienti_data_nasterii_ck CHECK ( data_nasterii > TO_DATE('01-01-1930', 'dd-mm-yyyy') );

ALTER TABLE bd066.detalii_client
    ADD CONSTRAINT detalii_clienti_gen_ck CHECK ( gen IN ( 'F', 'M' ) );

ALTER TABLE bd066.detalii_client
    ADD CONSTRAINT detalii_client_email_ck CHECK ( REGEXP_LIKE ( email,
                                                                 '^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$' ) );

CREATE UNIQUE INDEX bd066.detalii_client_email_un ON
    bd066.detalii_client (
        email
    ASC );

CREATE UNIQUE INDEX bd066.detalii_client__idx ON
    bd066.detalii_client (
        client_id_client
    ASC );

CREATE UNIQUE INDEX bd066.detalii_client_pk ON
    bd066.detalii_client (
        id_informatii
    ASC );

ALTER TABLE bd066.detalii_client ADD CONSTRAINT detalii_client_pk PRIMARY KEY ( id_informatii );

ALTER TABLE bd066.detalii_client ADD CONSTRAINT detalii_client_email_un UNIQUE ( email );

CREATE TABLE bd066.furnizor (
    id_furnizor      NUMBER(2) NOT NULL,
    nume_furnizor    VARCHAR2(20 BYTE) NOT NULL,
    telefon_furnizor VARCHAR2(10 BYTE)
);

ALTER TABLE bd066.furnizor
    ADD CONSTRAINT furnizor_nume_ck CHECK ( length(nume_furnizor) > 2
                                            AND REGEXP_LIKE ( nume_furnizor,
                                                              '^[A-Za-z]*$' ) );

ALTER TABLE bd066.furnizor
    ADD CONSTRAINT furnizor_telefon_ck CHECK ( REGEXP_LIKE ( telefon_furnizor,
                                                             '^[0-9]' )
                                               AND length(telefon_furnizor) = 10 );

CREATE UNIQUE INDEX bd066.furnizor_pk ON
    bd066.furnizor (
        id_furnizor
    ASC );

CREATE UNIQUE INDEX bd066.furnizor_telefon_furnizor_un ON
    bd066.furnizor (
        telefon_furnizor
    ASC );

ALTER TABLE bd066.furnizor ADD CONSTRAINT furnizor_pk PRIMARY KEY ( id_furnizor );

ALTER TABLE bd066.furnizor ADD CONSTRAINT furnizor_telefon_furnizor_un UNIQUE ( telefon_furnizor );

CREATE TABLE bd066.produse (
    id_produs            NUMBER(2) NOT NULL,
    denumire_produs      VARCHAR2(20 BYTE) NOT NULL,
    pret                 NUMBER(3) NOT NULL,
    stoc                 NUMBER(3) NOT NULL,
    furnizor_id_furnizor NUMBER(2) NOT NULL
);

ALTER TABLE bd066.produse
    ADD CONSTRAINT produse_denumire_produs CHECK ( length(denumire_produs) > 2
                                                   AND REGEXP_LIKE ( denumire_produs,
                                                                     '^[A-Za-z ]*$' ) );

ALTER TABLE bd066.produse
    ADD CONSTRAINT produse_pret_ck CHECK ( pret BETWEEN 2 AND 999 );

ALTER TABLE bd066.produse ADD CONSTRAINT produse_stoc_ck CHECK ( stoc >= 0 );

CREATE UNIQUE INDEX bd066.produse_denumire_produs_un ON
    bd066.produse (
        denumire_produs
    ASC );

CREATE UNIQUE INDEX bd066.produse_pk ON
    bd066.produse (
        id_produs
    ASC );

ALTER TABLE bd066.produse ADD CONSTRAINT produse_pk PRIMARY KEY ( id_produs );

ALTER TABLE bd066.produse ADD CONSTRAINT produse_denumire_produs_un UNIQUE ( denumire_produs );

CREATE TABLE bd066.relation_prod_com (
    produse_id_produs  NUMBER(2) NOT NULL,
    comanda_id_comanda NUMBER(2) NOT NULL,
    cantitate          NUMBER(2) NOT NULL
);

ALTER TABLE bd066.relation_prod_com
    ADD CONSTRAINT cantitate_ck CHECK ( cantitate BETWEEN 1 AND 999 );

CREATE UNIQUE INDEX bd066.relation_prod_com_pk ON
    bd066.relation_prod_com (
        produse_id_produs
    ASC,
        comanda_id_comanda
    ASC );

ALTER TABLE bd066.relation_prod_com ADD CONSTRAINT relation_prod_com_pk PRIMARY KEY ( produse_id_produs,
                                                                                      comanda_id_comanda );

ALTER TABLE bd066.comanda
    ADD CONSTRAINT comanda_angajati_fk FOREIGN KEY ( angajati_id_angajat )
        REFERENCES bd066.angajati ( id_angajat );

ALTER TABLE bd066.comanda
    ADD CONSTRAINT comanda_client_fk FOREIGN KEY ( client_id_client )
        REFERENCES bd066.client ( id_client );

ALTER TABLE bd066.detalii_client
    ADD CONSTRAINT detalii_client_client_fk FOREIGN KEY ( client_id_client )
        REFERENCES bd066.client ( id_client );

ALTER TABLE bd066.produse
    ADD CONSTRAINT produse_furnizor_fk FOREIGN KEY ( furnizor_id_furnizor )
        REFERENCES bd066.furnizor ( id_furnizor );

ALTER TABLE bd066.relation_prod_com
    ADD CONSTRAINT relation_prod_com_comanda_fk FOREIGN KEY ( comanda_id_comanda )
        REFERENCES bd066.comanda ( id_comanda );

ALTER TABLE bd066.relation_prod_com
    ADD CONSTRAINT relation_prod_com_produse_fk FOREIGN KEY ( produse_id_produs )
        REFERENCES bd066.produse ( id_produs );

CREATE SEQUENCE bd066.client_id_client_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER bd066.client_id_client_trg BEFORE
    INSERT ON bd066.client
    FOR EACH ROW
    WHEN ( new.id_client IS NULL )
BEGIN
    :new.id_client := bd066.client_id_client_seq.nextval;
END;
/

CREATE SEQUENCE bd066.comanda_id_comanda_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER bd066.comanda_id_comanda_trg BEFORE
    INSERT ON bd066.comanda
    FOR EACH ROW
    WHEN ( new.id_comanda IS NULL )
BEGIN
    :new.id_comanda := bd066.comanda_id_comanda_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                            11
-- ALTER TABLE                             34
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          2
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
